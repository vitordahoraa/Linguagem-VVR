#Options
GenerateScanner = true
GenerateParser = true
Language = Java
ScannerName = Lexico
ParserName = Sintatico
SemanticName = Semantico
ScannerCaseSensitive = true
ScannerTable = Compact
Input = Stream
Parser = SLR
#RegularDefinitions
D: [a-zA-Z_][a-zA-Z0-9_]*

VAL_INT: [0-9]+

VAL_DEC: ([0-9]*[\.])?[0-9]+

VAL_BIN: 0b[01]+

VAL_HEX: 0x[0-9a-fA-F]+

VAL_CHAR: "'"(.?)"'"

VAL_STR: \"[^\"]*\"

SL_COMMENT: /"/".*

ML_COMMENT: /\*([^\*]|[\r\n]|(\*+([^\*/]|[\r\n])))*\*+/
#Tokens
ID : {D}+ 
: [\s\t\n\r]*

SL_COMMENT: {SL_COMMENT}

ML_COMMENT: {ML_COMMENT}



OP_ARIT_SOMA : "+" 
OP_ARIT_INC : "++" 

OP_ARIT_SUB : "-" 
OP_ARIT_DEC : "--" 

OP_ARIT_MULT : "*"

OP_ARIT_DIV : "/" 

OP_ARIT_MOD : "%"


OP_REL_IGUAL : "=="
OP_REL_DIFERENTE : "!=" 
OP_REL_MAIORQUE : ">" 
OP_REL_MENORQUE : "<"
OP_REL_MAIORIGUAL : ">="
OP_REL_MENORIGUAL : "<=" 
OP_REL_NOT : "-" 

OP_LOG_AND : "&&"
OP_LOG_OR : "||" 
OP_LOG_NOT : "!"

OP_BIT_AND: "&" 
OP_BIT_OR:  "|"
OP_BIT_XOR: "^"
OP_BIT_NOT: "~"
OP_BIT_LEFT: "<<" 
OP_BIT_RIGHT: ">>"

OP_ATRIB_IGUAL: "=" 

OP_ATRIB_SOMA: "+="

OP_ATRIB_SUBTRACAO: "-="

OP_ATRIB_MULT: "*="

OP_ATRIB_DIVISAO: "/="

OP_ATRIB_MOD: "%="

OP_ATRIB_AND_BIT: "&="

OP_ATRIB_OR_BIT: "|="

OP_ATRIB_XOR_BIT: "^="

OP_ATRIB_LEFT_BIT: "<<="

OP_ATRIB_RIGHT_BIT: ">>="

OP_INCDEC: "++" | "--"

OP_COND: "?"

VAL_INT : {VAL_INT}

VAL_DEC : {VAL_DEC}

VAL_BIN : {VAL_BIN}

VAL_HEX: {VAL_HEX}

VAL_CHAR : {VAL_CHAR}

VAL_STR : {VAL_STR}

KW_IF = ID : "if"

KW_INT = ID : "int"

KW_VOID = ID : "void"

KW_DOUBLE = ID : "double"

KW_STRING = ID : "string"

KW_CHAR = ID : "char"

KW_BOOL = ID : "bool"

KW_WHILE = ID : "while"

KW_FOR = ID : "for"

KW_BREAK = ID : "break"

KW_CONTINUE = ID : "continue"

KW_RETURN = ID : "return"

KW_SWITCH = ID : "switch"

KW_CASE = ID : "case"

KW_DEFAULT = ID : "default"

KW_DO = ID : "do"

KW_FUNCTION = ID : "function"

KW_CLASS = ID : "class"

KW_INTERFACE = ID : "interface"

KW_PUBLIC = ID : "public"

KW_PRIVATE = ID : "private"

KW_PROTECTED = ID : "protected"

KW_NEW = ID : "new"

KW_TRY = ID : "try"

KW_CATCH = ID : "catch"

KW_THROW = ID : "throw"

KW_THROWS = ID : "throws"

KW_IMPORT = ID : "import"

KW_PACKAGE = ID : "package"

KW_EXTENDS = ID : "extends"

KW_IMPLEMENTS = ID : "implements"

KW_TRUE = ID : "true"

KW_FALSE = ID : "false"

KW_NULL = ID : "null"

KW_THIS = ID : "this"

KW_SUPER = ID : "super"

KW_ENUM = ID : "enum"

KW_ELSE = ID : "else"

KW_INPUT = ID : "input"

KW_OUTPUT = ID : "output"

KW_INPUT_ASSIGN : ">>"

KW_OUTPUT_ASSIGN : "<<"

DEL_PONTOEVIRGULA : ;

DEL_PONTO : \.

DEL_DOISPONTO : :

DEL_ABREPARENTESES : \(

DEL_FECHAPARENTESES : \)

DEL_ABRECOLCHETE : \[

DEL_FECHACOLCHETE : \]

DEL_ABRECHAVES : \{

DEL_FECHACHAVES : \}

DEL_VIRGULA : ,
#NonTerminals
<INICIAL>
<LISTA_COMANDO>
<COMANDO>

<ESCOPO>

<DECLARACAO>
<DECLARACAO_TIPO>
<INT>
<DOUBLE>
<STRING>
<CHAR>
<BOOL>
<ATRIB>
<VETOR>
<ID>
<MULT_ID>
<OP_ATRIB>
<IF>
<ELSE>


<VALOR_ARIT>
<VALOR_BOOL>
<VALOR_STRING>
<VALOR_CHAR>

<FOR>
<DOWHILE>
<WHILE>


<EXP>
<EXP1>
<EXP2>
<EXP3>
<EXP4>
<EXP5>
<EXP6>
<EXP7>
<EXP8>
<EXP9>
<EXP10>
<EXP11>


<OP_REL>
<OP_NEG>
<OP_BITWISE>
<OP_ARIT_BAIXA>
<OP_ARIT_ALTA>
<OP_ARIT_MAIS_ALTA>
<OP_INC>

<FUNCTION_DECLARATION>
<TIPOS_FUNCTION>
<RETURN>
<PARAMETRO>
<TIPOS_PARAMETRO>

<FUNCTION_CALLING>


<INPUT>
<INPUT_ID>
<OUTPUT>
<OUTPUT_ID>
#Grammar
<INICIAL> ::=  <FUNCTION_DECLARATION>  | <FUNCTION_DECLARATION>  <INICIAL>; // Trocar posteriormente para a estrutura correta


<LISTA_COMANDO> ::= <COMANDO> DEL_PONTOEVIRGULA #12 <LISTA_COMANDO>| <COMANDO> DEL_PONTOEVIRGULA #12;


<ESCOPO> ::= DEL_ABRECHAVES #4 <LISTA_COMANDO> DEL_FECHACHAVES #8 | DEL_ABRECHAVES DEL_FECHACHAVES ;


<COMANDO> ::= <DECLARACAO>  | <ATRIB> | <IF> | <FOR> | <DOWHILE> | <WHILE> | <RETURN> | <INPUT> | <OUTPUT>;

//<DECLARACAO> ::= <INT>  | <STRING>  | <CHAR> | <BOOL> | <DOUBLE> | <ATRIB> ;
 
<DECLARACAO> ::= <DECLARACAO_TIPO> <MULT_ID> <OP_ATRIB> <EXP> | <DECLARACAO_TIPO> <MULT_ID>;

<DECLARACAO_TIPO> ::= KW_INT #9 | KW_DOUBLE #9 | KW_STRING #9| KW_CHAR #9 | KW_BOOL #9;
 
//<INT> ::= KW_INT <MULT_ID> <OP_ATRIB> <EXP> |  KW_INT <MULT_ID>; 

//<DOUBLE> ::= KW_DOUBLE <MULT_ID> <OP_ATRIB> <EXP> | KW_DOUBLE <MULT_ID>; 

//<STRING> ::= KW_STRING <MULT_ID> <OP_ATRIB> VAL_STR |  KW_STRING <MULT_ID>;

//<CHAR> ::= KW_CHAR <MULT_ID> <OP_ATRIB> VAL_CHAR | KW_CHAR <MULT_ID>;

//<BOOL> ::=  KW_BOOL <MULT_ID> <OP_ATRIB> <EXP> |  KW_BOOL <MULT_ID>;

<ATRIB> ::=  ID #10 <OP_ATRIB> <EXP>;


<IF> ::= KW_IF DEL_ABREPARENTESES <EXP> DEL_FECHAPARENTESES <ESCOPO> <ELSE>;

<ELSE> ::= KW_ELSE <ESCOPO> | î;

<OP_ATRIB> ::= OP_ATRIB_IGUAL | OP_ATRIB_SOMA | 
OP_ATRIB_SUBTRACAO | OP_ATRIB_MULT | OP_ATRIB_DIVISAO | 
OP_ATRIB_MOD | OP_ATRIB_AND_BIT | OP_ATRIB_OR_BIT | 
OP_ATRIB_XOR_BIT | OP_ATRIB_LEFT_BIT | OP_ATRIB_RIGHT_BIT;

<MULT_ID> ::= <ID> #15 DEL_VIRGULA <MULT_ID> | <ID> #15 ;

<ID> ::= ID #2 | <VETOR> #11;

<VETOR> ::= ID #2 DEL_ABRECOLCHETE <EXP> DEL_FECHACOLCHETE | ID #2 DEL_ABRECOLCHETE DEL_FECHACOLCHETE;

<VALOR_ARIT> ::= VAL_INT | VAL_DEC | VAL_BIN | VAL_HEX;
<VALOR_STRING> ::= VAL_STR;
<VALOR_CHAR> ::= VAL_CHAR;
<VALOR_BOOL> ::= KW_TRUE | KW_FALSE;



<EXP>  ::= <EXP> OP_LOG_OR <EXP1> | <EXP1>;
<EXP1> ::= <EXP1> OP_LOG_AND <EXP2> | <EXP2>;
<EXP2> ::= <EXP2> OP_BIT_OR <EXP3> | <EXP3>;
<EXP3> ::= <EXP3> OP_BIT_XOR <EXP4> | <EXP4>;
<EXP4> ::= <EXP4> OP_BIT_AND <EXP5> | <EXP5>;
<EXP5> ::= <EXP5> <OP_REL> <EXP6> | <EXP6>;
<EXP6> ::= <EXP6> <OP_BITWISE> <EXP7> | <EXP7>;
<EXP7> ::= <EXP7> <OP_ARIT_BAIXA> <EXP8> | <EXP8>;
<EXP8> ::= <EXP8> <OP_ARIT_ALTA> <EXP9> | <EXP9> ;
<EXP9> ::= <OP_NEG> <EXP10> | <EXP10>;
<EXP10> ::= <OP_INC><EXP11> | <EXP11><OP_INC> | <EXP11>;
//<EXP10> ::= <ID> | <VALOR_ARIT> | <VALOR_BOOL> | <VALOR_STRING> | <VALOR_CHAR> |  DEL_ABREPARENTESES <EXP> DEL_FECHAPARENTESES;

<EXP11> ::= <VALOR_ARIT> | <VALOR_BOOL> | <VALOR_STRING> | <VALOR_CHAR> | DEL_ABREPARENTESES <EXP> DEL_FECHAPARENTESES | <FUNCTION_CALLING> | <ID> #15;

<OP_REL> ::= OP_REL_MAIORQUE | OP_REL_MENORQUE | OP_REL_MAIORIGUAL | OP_REL_MENORIGUAL | OP_REL_IGUAL | OP_REL_DIFERENTE; 
<OP_NEG> ::= OP_REL_NOT| OP_BIT_NOT | OP_LOG_NOT;
<OP_BITWISE> ::= OP_BIT_LEFT | OP_BIT_RIGHT;
<OP_ARIT_BAIXA> ::= OP_ARIT_SOMA |OP_ARIT_SUB;
<OP_ARIT_ALTA> ::= OP_ARIT_MULT | OP_ARIT_DIV | OP_ARIT_MOD;
<OP_INC> ::= OP_ARIT_INC | OP_ARIT_DEC;

<FOR> ::= KW_FOR DEL_ABREPARENTESES <DECLARACAO> DEL_PONTOEVIRGULA <EXP> DEL_PONTOEVIRGULA <EXP> DEL_FECHAPARENTESES <ESCOPO>;
<DOWHILE> ::= KW_DO <ESCOPO> KW_WHILE DEL_ABREPARENTESES <EXP> DEL_FECHAPARENTESES;
<WHILE> ::= KW_WHILE DEL_ABREPARENTESES <EXP> DEL_FECHAPARENTESES <ESCOPO>;

//<FUNCTION> ::= KW_INT ID DEL_ABREPARENTESES <MULT_ID> DEL_FECHAPARENTESES <ESCOPO>;
<PARAMETRO> ::= <TIPOS_PARAMETRO> <ID> #14 DEL_VIRGULA #6 <PARAMETRO> | <TIPOS_PARAMETRO> <ID> #14;
<FUNCTION_DECLARATION> ::= <TIPOS_FUNCTION> <ID> #13 DEL_ABREPARENTESES #5 <PARAMETRO> DEL_FECHAPARENTESES #7 <ESCOPO> | <TIPOS_FUNCTION> <ID> #13 DEL_ABREPARENTESES #5 DEL_FECHAPARENTESES #7 <ESCOPO>;

<FUNCTION_CALLING> ::= <ID> DEL_ABREPARENTESES <PARAMETRO> DEL_FECHAPARENTESES  |  <ID> DEL_ABREPARENTESES DEL_FECHAPARENTESES;

<RETURN> ::= KW_RETURN <EXP> | KW_RETURN;
<TIPOS_FUNCTION> ::= KW_INT #1 | KW_DOUBLE #1 | KW_CHAR #1 | KW_STRING #1 | KW_BOOL #1 | KW_VOID #1;
<TIPOS_PARAMETRO> ::= KW_INT #3 | KW_DOUBLE #3 | KW_CHAR #3 | KW_STRING #3 | KW_BOOL #3;


<INPUT> ::= KW_INPUT DEL_ABREPARENTESES <EXP> DEL_FECHAPARENTESES;

<OUTPUT> ::= KW_OUTPUT DEL_ABREPARENTESES <EXP> DEL_FECHAPARENTESES;
